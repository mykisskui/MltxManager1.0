using MltxManager.Data;
using MltxManager.Models.DBHelper;
using MltxManager.Models.DBModel;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Web;
using System.Web.Mvc;

namespace MltxManager.Controllers
{
    public class Mltx_MallClassController : Controller
    {
        //
        // GET: /Mltx_MallClass/

        public ActionResult Index()
        {
            return View();
        }

        /// <summary>
        /// 品类页面
        /// </summary>
        /// <returns></returns>
        public ActionResult MallClass(string userid)
        {
            ViewBag.userid = string.IsNullOrEmpty(userid) ? "youke" :  userid;
            try
            {
                StringBuilder sb = new StringBuilder();

                IList<Mltx_Group_first> firsts = null;
                IList<Mltx_Group_second> seconds = null;
                firsts = new GetBiz().GetCommodityGrouping().MltxGroupFirst;

                seconds = new GetBiz().GetCommodityGrouping().MltxGroupSecond;

                sb.Append("{");
                sb.Append("\"data\":[");
                foreach (Mltx_Group_first first in firsts)
                {
                    sb.Append("{");
                    sb.Append(string.Format("\"id\":\"{0}\",", first.GroupId));
                    sb.Append(string.Format("\"name\":\"{0}\",", first.GroupName));
                    sb.Append(string.Format("\"mark\":\"{0}\",", first.Remark));
                    sb.Append("\"data\":[");
                    foreach (Mltx_Group_second second in seconds.Where(f => f.OwnerId == first.GroupId))
                    {
                        sb.Append("{");
                        sb.Append(string.Format("\"id\":\"{0}\",", second.GroupId));
                        sb.Append(string.Format("\"name\":\"{0}\",", second.GroupName));
                        sb.Append(string.Format("\"oid\":\"{0}\",", second.OwnerId));
                        sb.Append(string.Format("\"pic\":\"{0}\",", second.GroupPic));
                        sb.Append(string.Format("\"mark\":\"{0}\"", second.Remark));
                        sb.Append("},");
                    }
                    sb.Append("]},");
                    sb = sb.Replace("},]}", "}]}");
                }

                sb.Append("]}");

                ViewBag.classData = sb.ToString().Replace("]},]}", "]}]}");
            }
            catch (Exception ex)
            {
                //Response.Redirect("");//跳转到错误页
                return RedirectToAction("WebappErrorPage", "ToOtherPage", new { errmsg = "分类数据获取异常！" });
            }
            return View();

        }

        /// <summary>
        /// 列表页
        /// </summary>
        /// <param name="userid">用户id</param>
        /// <param name="title">标题</param>
        /// <param name="groupid">分组id</param>
        /// <returns></returns>
        public ActionResult MallList(string userid, string title,string groupid,string tag) 
        {
            tag = string.IsNullOrEmpty(tag) ? "1" : tag;
            ViewBag.userid = string.IsNullOrEmpty(userid) ? "youke" :  userid;
            ViewBag.groupid = string.IsNullOrEmpty(groupid) ? "alllist" : groupid;
            ViewBag.listtitle = string.IsNullOrEmpty(title) ? "列表" : title;
            List<Mltx_GoodsInfo_shop> goodlist = null;
            try
            {
                StringBuilder sb = new StringBuilder();
                goodlist = new ShopGoodsData().GetShopGoodsDataListBytag(groupid,tag).goodslist;

                sb.Append("[");
                foreach (Mltx_GoodsInfo_shop goods in goodlist)
                {
                    sb.Append("{");
                    sb.Append(string.Format("\"gid\":\"{0}\",", goods.GoodsId));
                    sb.Append(string.Format("\"gname\":\"{0}\",", goods.GoodsName));
                    sb.Append(string.Format("\"guige\":\"{0}\",", goods.GoodsGuige));
                    sb.Append(string.Format("\"rprice\":\"{0}\",", goods.Rprice));
                    sb.Append(string.Format("\"mprice\":\"{0}\",", goods.Mprice));
                    sb.Append(string.Format("\"gpic\":\"{0}\",", goods.GoodsListPic));
                    sb.Append("},");
                }

                sb.Append("]");

                ViewBag.goodsData = sb.ToString().Replace("},]", "}]");
            }
            catch (Exception ex)
            {
                //跳转异常页面
                return RedirectToAction("WebappErrorPage", "ToOtherPage", new { errmsg = "列表数据加载异常！" });
            }
            
            return View();
        }

        /// <summary>
        /// 排序ajax
        /// </summary>
        /// <param name="userid"></param>
        /// <param name="title"></param>
        /// <param name="groupid"></param>
        /// <param name="tag"></param>
        /// <returns></returns>
         [HttpPost]
        public string Sort(string userid, string title, string groupid, string tag)
        {
            tag = string.IsNullOrEmpty(tag) ? "1" : tag;
            List<Mltx_GoodsInfo_shop> goodlist = null;
            try
            {
                StringBuilder sb = new StringBuilder();
                goodlist = new ShopGoodsData().GetShopGoodsDataListBytag(groupid, tag).goodslist;

                sb.Append("[");
                foreach (Mltx_GoodsInfo_shop goods in goodlist)
                {
                    sb.Append("{");
                    sb.Append(string.Format("\"gid\":\"{0}\",", goods.GoodsId));
                    sb.Append(string.Format("\"gname\":\"{0}\",", goods.GoodsName));
                    sb.Append(string.Format("\"guige\":\"{0}\",", goods.GoodsGuige));
                    sb.Append(string.Format("\"rprice\":\"{0}\",", goods.Rprice));
                    sb.Append(string.Format("\"mprice\":\"{0}\",", goods.Mprice));
                    sb.Append(string.Format("\"gpic\":\"{0}\",", goods.GoodsListPic));
                    sb.Append("},");
                }

                sb.Append("]");

               return sb.ToString().Replace("},]", "}]");
            }
            catch (Exception ex)
            {
                return "error";
            }
        }

        /// <summary>
        /// 商品详情页
        /// </summary>
        /// <returns></returns>
         public ActionResult MallDetails(string userid,string goodid)
         {
             int gid;
             Mltx_GoodsInfo_shop ginfo = new Mltx_GoodsInfo_shop();
             ViewBag.userid = string.IsNullOrEmpty(userid) ? "youke" : userid;
             if (string.IsNullOrEmpty(goodid))
             {
                 //跳转到异常页 参数缺失
                 return RedirectToAction("WebappErrorPage", "ToOtherPage", new { errmsg = "获取数据参数缺失！" });
             }
             else {
                 gid = int.Parse(goodid);

                 ReturnMsg rmsg = new ShopGoodsData().GetShopGoodsInfoByGid(gid);

                 if (rmsg.errcode == 0)
                 {
                     ginfo = rmsg.MltxGoodsInfoShop;
                 }
                 else {
                     //跳转到异常页面 获取数据时异常
                     return RedirectToAction("WebappErrorPage", "ToOtherPage", new { errmsg = "获取商品数据时异常！" });
                 }
             }

             return View(ginfo);
         }

         public ActionResult MallComment()
         {
             return View();
         }

    }
}
