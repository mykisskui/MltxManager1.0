using MltxManager.Models.DBHelper;
using MltxManager.Models.DBModel;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

namespace MltxManager.Data
{
    public class ShopGoodsData
    {
        /// <summary>
        /// 根据tag查询商城商品列表 
        /// </summary>
        /// <param name="tag">1 时间顺序 2 销量 3价格</param>
        /// <returns></returns>
        public ReturnMsg GetShopGoodsDataListBytag(string groupid, string tag)
        {
             ReturnMsg rmsg = new ReturnMsg();

             using (MltxDbContext db = new MltxDbContext())
             {
                 try
                 {
                     IQueryable<Mltx_GoodsInfo_shop> goodsinfo = null;
                     if (string.IsNullOrEmpty(groupid))
                     {
                         goodsinfo = db.goodsinfo_shop.AsQueryable();
                     }
                     else
                     {
                         int group_id = int.Parse(groupid);
                         goodsinfo = db.goodsinfo_shop.AsQueryable().Where(g => g.GroupId == group_id);
                     }

                     switch (tag)
                     {
                         case "1": goodsinfo = goodsinfo.OrderByDescending(t => t.CTime); break;
                         case "2": goodsinfo = goodsinfo.OrderByDescending(t => t.GoodsSales); break;
                         case "3": goodsinfo = goodsinfo.OrderBy(t => t.Rprice); break;
                     }

                     rmsg.errcode = 0;
                     rmsg.errmsg = "SUCCESS";
                     rmsg.goodslist = goodsinfo.ToList();

                 }
                 catch (Exception ex)
                 {
                     Data.MethodHepler.MHepler.writelog_err("获取商品列表异常:" + ex.Message);
                     rmsg.errcode = -1;
                     rmsg.errmsg = ex.Message;
                 }

                 return rmsg;
             }
        }

        /// <summary>
        /// 根据gid获取商城商品详细信息
        /// </summary>
        /// <param name="gid"></param>
        /// <returns></returns>
        public ReturnMsg GetShopGoodsInfoByGid(int gid)
        {
            ReturnMsg rmsg = new ReturnMsg();

            using (MltxDbContext db = new MltxDbContext())
            {
                try
                {
                    Mltx_GoodsInfo_shop goodinfo = db.goodsinfo_shop.Where(g => g.GoodsId == gid).SingleOrDefault();

                    rmsg.errcode = 0;
                    rmsg.errmsg = "SUCCESS";
                    rmsg.MltxGoodsInfoShop = goodinfo;
                }
                catch (Exception ex)
                {
                    rmsg.errcode = -1;
                    rmsg.errmsg = ex.Message;
                }

                return rmsg;
            }
        }

        /// <summary>
        /// 根据gid获取商品评价信息 含分页
        /// </summary>
        /// <param name="gid"></param>
        /// <returns></returns>
        public ReturnMsg GetShopCommentByGid(int gid,int page,int skip)
        {
            ReturnMsg rmsg = new ReturnMsg();

            using (MltxDbContext db = new MltxDbContext())
            {
                try
                {
                    List<Mltx_Comments> c_list = db.comments.Where(g => g.GoodsId == gid).OrderByDescending(g => g.CommentTime).Skip(skip * page).Take(page).ToList();
                    rmsg.errcode = 0;
                    rmsg.errmsg = "SUCCESS";
                    rmsg.com_list = c_list;
                }
                catch (Exception ex)
                {
                    rmsg.errcode = -1;
                    rmsg.errmsg = ex.Message;
                }

                return rmsg;
            }
        }
    }
}