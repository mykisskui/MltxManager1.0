using MltxManager.Data.MethodHepler;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Net;
using System.Text;
using System.Web;
using System.Web.Caching;
using System.Web.Script.Serialization;

namespace MltxManager.Data
{
    public class wxapi
    {
        private JavaScriptSerializer js = new JavaScriptSerializer();
        private string appid = string.Format("{0}", "wx301e3d203202086b");
        private string secret = string.Format("{0}", "8d707bf48176d422bdeb9ffb9dabe48a");
        

        /// <summary>
        /// 获取access_token
        /// 微信第一步token
        /// </summary>
        /// <returns></returns>
        public Access_token Get_access_token()
        {
            Access_token token = null;
            if (HttpContext.Current.Cache["access_token"] == null)
            {
                string param = string.Format("?grant_type={0}&appid={1}&secret={2}", "client_credential", appid, secret);
                string URL = "https://api.weixin.qq.com/cgi-bin/token" + param;
                token = HttpGet<Access_token>(URL, new Access_token());
                if (token.errcode == 0)
                {
                    HttpContext.Current.Cache.Add("access_token", token, null, Cache.NoAbsoluteExpiration, TimeSpan.FromSeconds(token.expires_in), CacheItemPriority.Normal, null);
                }
            }
            else
            {
                token = HttpContext.Current.Cache.Get("access_token") as Access_token;
            }
            return token;
        }
        /// <summary>
        /// 获取jssdk token
        /// 微信jsapi必备token
        /// </summary>
        /// <param name="accessToken"></param>
        /// <returns></returns>
        public jsapi_ticket Get_jsapi_ticket(string accessToken) {
            jsapi_ticket jsapi = null;
            if (HttpContext.Current.Cache["jsapi_ticket"] == null)
            {
                string param = string.Format("?access_token={0}&type=jsapi", accessToken);
                string URL = "https://api.weixin.qq.com/cgi-bin/ticket/getticket"+param;
                jsapi = HttpGet<jsapi_ticket>(URL, new jsapi_ticket());
                if (jsapi.errcode == 0) {
                    HttpContext.Current.Cache.Add("jsapi_ticket", jsapi, null, Cache.NoAbsoluteExpiration, TimeSpan.FromSeconds(jsapi.expires_in), CacheItemPriority.Normal, null);
                }
            }
            else {
                jsapi = HttpContext.Current.Cache.Get("jsapi_ticket") as jsapi_ticket;
            }
            return jsapi;
            
        }
        /// <summary>
        /// sign签名
        /// jssdk
        /// </summary>
        /// <returns></returns>
        public string sign(string noncestr,string jstoken,string time,string url) {

            Dictionary<string, string> dic = new Dictionary<string, string>();
            dic.Add("noncestr", noncestr);
            dic.Add("jsapi_ticket", jstoken);
            dic.Add("timestamp", time);
            dic.Add("url", url);
            string str = string.Empty;
            var result = from i in dic orderby i.Key select i;
            foreach (var item in result) {
                str += item.Key+":"+item.Value+"&";
            }
            str = str.TrimEnd('&');
            return MHepler.GetMD5(str);
        }
        /// <summary>
        /// 泛型请求httpget
        /// </summary>
        /// <typeparam name="T">泛型对象</typeparam>
        /// <param name="url">路径</param>
        /// <param name="t">参数</param>
        /// <returns></returns>
        public T HttpGet<T>(string url,T t) {
            string result = string.Empty;
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);
            request.Method = "GET";
            request.ContentType = "text/html;charset=UTF-8";
            //request.ContentLength = 0;
            request.Timeout = 20000;
            HttpWebResponse response = null;
            try {
                response = (HttpWebResponse)request.GetResponse();
                Stream str = response.GetResponseStream();
                using (StreamReader reader = new StreamReader(str, Encoding.UTF8))
                {
                    t = js.Deserialize<T>(reader.ReadToEnd());
                }
            }
            catch {
                
            }
            return t;
        }
    }
    /// <summary>
    /// 微信核心token
    /// </summary>
    public class Access_token {
        /// <summary>
        /// tokne
        /// </summary>
        public string access_token { get; set; }
        /// <summary>
        /// 有效期
        /// </summary>
        public int expires_in { get; set; }
        /// <summary>
        /// 错误代码
        /// </summary>
        public int errcode { get; set; }
        /// <summary>
        /// 错误提示
        /// </summary>
        public string errmsg { get; set; }
    }
    /// <summary>
    /// 微信jssdk token
    /// </summary>
    public class jsapi_ticket {
        public int errcode { get; set; }
        public string errmsg { get; set; }
        public string ticket { get; set; }
        public int expires_in { get; set; }
    }
}